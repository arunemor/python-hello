name: Deploy to EC2 / ASG

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout code
    - name: Checkout Code
      uses: actions/checkout@v3

    # Build Docker image with commit SHA
    - name: Build & Push Docker Image
      run: |
        docker build -t kharwararun/app:${GITHUB_SHA} .
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        docker push kharwararun/app:${GITHUB_SHA}

    # Update commit ID in Secrets Manager
    - name: Update Commit ID in AWS Secrets Manager
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ap-south-1
      run: |
        aws secretsmanager put-secret-value \
          --secret-id secrets \
          --secret-string "{\"commit_id\":\"${GITHUB_SHA}\"}"

    # Deploy to EC2 via SSH
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # Install Docker if missing
          if ! command -v docker &> /dev/null
          then
            sudo apt update -y
            sudo apt install -y docker.io jq unzip curl
            sudo systemctl enable docker
            sudo systemctl start docker
          fi

          # Install AWS CLI if missing
          if ! command -v aws &> /dev/null
          then
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
          fi

          # Fetch latest commit ID from Secrets Manager
          SECRET_JSON=$(aws secretsmanager get-secret-value --secret-id secrets --query SecretString --output text)
          COMMIT_ID=$(echo $SECRET_JSON | jq -r '.commit_id')

          if [ -z "$COMMIT_ID" ]; then
            echo "Error: commit_id is empty. Exiting."
            exit 1
          fi

          # Deploy container
          docker pull kharwararun/app:$COMMIT_ID
          docker stop app || true
          docker rm app || true
          docker run -d --restart unless-stopped --name app -p 5000:5000 kharwararun/app:$COMMIT_ID
